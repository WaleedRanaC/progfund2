//This program uses a class with a Boolean function that determines
//if a new value sent to it is the largest value received so far


#include <iostream>
using namespace std;

class SimpleStat
    {
        private:
            int largest; //the largest number received so far
            int sum;    //the sum of the numbers received
            int count;  //how many numbers have been received
        
        
        bool isNewLargest(int); //This is a private class function
        
        public:
            SimpleStat();       //default constructor
            bool addNumber(int);
            double calcAverage();
        
            int getLargest()
            {   return largest; }
        
            int getCount()
            {   return count; }
    
        
    };
    //SimpleStat Class Implementation Code
    
    /*******************************
     * SimpleStat Default constructor *
     * *****************************/
    SimpleStat::SimpleStat()
    {
        largest = sum = count = 0;
    }
    
    /*****************************
     * SimpleStat::addNumber    *
     * **************************/
    bool SimpleStat:: addNumber(int num)
    {   bool goodNum = true;
    if (num >= 0) //If num is not valid
    {
            sum += num; //Add it to the sum
            count++; //Count it
            if (isNewLargest(num)) //Find out if it is the new largest
                largest = num;
    }
    else
        goodNum = false;
        
    return goodNum;
    }
    
    /************************
     *  SimpleStat:: isNewLargest   *
     * *********************/
bool SimpleStat ::isNewLargest(int num)
{
    if (num > largest)
        return true;
    else
        return false;
}
    
/*************************************************
* SimpleStat::calcAverage
*************************************************/
    
double SimpleStat::calcAverage()
{
    if(count > 0)
        return static_cast<double>(sum)/count;
    else
        return 0;
}
    
    
    
//Client Program
    
    
/*****************************
*          main        *
*****************************/
    
    int main()
    
    {
        int num;
        SimpleStat statHelper;
        
        cout<< "Please enter a the set of non-negative integers \n";
        cout<< "values you want to average. Separate them with a \n";
        cout<< "spaces and enter -1 after the last value to finish. \n \n ";
        
        cin>> num;
        while (num >= 0)
        {
            statHelper.addNumber(num);
            cin>> num;
        }
        
        cout<< "\n You enter " <<statHelper.getCount() << "values. \n";
        cout<< "The largest value was " <<statHelper.getLargest() <<endl;
        cout<< "The average value was " <<statHelper.calcAverage() <<endl;

    return 0;
}
